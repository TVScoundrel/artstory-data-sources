name: Build catalogue JSON

on:
    workflow_dispatch: {}
    push:
        paths:
            - "Sint Promo Lijst.xlsx"
            - "excel_to_brevo_json.py"
            - ".github/workflows/build-json.yml"

permissions:
    contents: write # allow commits back to the repo

concurrency:
    group: build-json
    cancel-in-progress: true

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # needed for rebase
                  persist-credentials: true # keep GITHUB_TOKEN for push

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install pandas openpyxl

            - name: Convert Excel to JSON
              run: |
                  python excel_to_brevo_json.py \
                    --excel "Sint Promo Lijst.xlsx" \
                    --out "sint_promo_brevo_ready.json" \
                    --image-base "https://cdn.jsdelivr.net/gh/TVScoundrel/artstory-data-sources@main/product-images/" \
                    --brand-col "Brand" \
                    --product-desc-col "Products" \
                    --article-code-col "Article code " \
                    --discount-col "Discount %"

            - name: Commit JSON (create/update)
              run: |
                  set -eux
                  git config user.name  "github-actions[bot]"
                  git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

                  # Stage only the JSON to keep commits clean; use -A if you prefer
                  git add sint_promo_brevo_ready.json || true

                  if git diff --cached --quiet; then
                    echo "No changes to commit."
                    exit 0
                  fi

                  git commit -m "Build JSON from Excel [skip ci]"

                  # Rebase onto latest main to avoid non-fast-forward errors
                  git pull --rebase origin main

                  # Retry push (handles race with another workflow)
                  for i in 1 2 3; do
                    if git push origin HEAD:main; then
                      echo "Push succeeded."
                      break
                    fi
                    echo "Push failed, rebasing and retrying ($i/3)â€¦"
                    git pull --rebase origin main
                    sleep 2
                  done
